create user urban_food identified by 702150;
grant all PRIVILEGES to urban_food;


// tables creation



CREATE TABLE users (
  USER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  USER_ROLE VARCHAR2(20) NOT NULL,
  USER_NAME VARCHAR2(100) NOT NULL,
  USER_EMAIL VARCHAR2(100) UNIQUE NOT NULL,
  USER_PASSWORD VARCHAR2(255) NOT NULL,
  CONSTRAINT chk_user_role CHECK (USER_ROLE IN ('admin', 'customer', 'supplier'))
);

CREATE TABLE CUSTOMER(
    CUSTOMER_ID NUMBER PRIMARY KEY,
    FULL_NAME VARCHAR2(100),
    PHONE VARCHAR2(20),
    ADDRESS VARCHAR2(200),
    IMAGE_URL VARCHAR2(255),
    
    CONSTRAINT CUSTOMER_USERS_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE;
    
);




CREATE TABLE SUPPLIER(
    SUPPLIER_ID NUMBER PRIMARY KEY,
    FULL_NAME VARCHAR2(100) NULL,
    PHONE VARCHAR2(20) NULL,
    ADDRESS VARCHAR2(200),
    IMAGE_URL VARCHAR2(255),
    
    FOREIGN KEY (SUPPLIER_ID) REFERENCES USERS(USER_ID)
);

ALTER TABLE SUPPLIER 
ADD CONSTRAINT SUPPLIER_USERS_FK
FOREIGN KEY (SUPPLIER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE;



// checking foreign constraints created
SELECT CONSTRAINT_NAME, TABLE_NAME, DELETE_RULE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('CUSTOMER', 'SUPPLIER') 
AND CONSTRAINT_TYPE = 'R';




CREATE TABLE CATEGORIES(
    CATEGORY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(100),
    DESCRIPTION VARCHAR2(500)
);


CREATE TABLE PRODUCTS(
    PRODUCT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SUPPLIER_ID NUMBER,
    CATEGORY_ID NUMBER,
    NAME VARCHAR2(100),
    IMAGE_URL VARCHAR2(255),
    WEIGHT NUMBER,
    STOCK NUMBER,
    PRICE NUMBER,

    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID),

    CONSTRAINT chk_product_price CHECK (PRICE > 0),
    CONSTRAINT chk_product_stock CHECK (STOCK > 0),
    CONSTRAINT chk_product_weight CHECK (WEIGHT > 0)
);



CREATE TABLE CART (
    CART_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    PRODUCT_ID NUMBER NOT NULL,
    QUANTITY NUMBER ,
    
    CONSTRAINT fk_cart_customer FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE,
    CONSTRAINT fk_cart_product FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID) ON DELETE CASCADE
);




CREATE TABLE ORDER_DETAILS(
    ORDER_DETAIL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID NUMBER,
    PRODUCT_ID NUMBER,
    QUANTITY NUMBER,
    SUB_TOTAL NUMBER(10,2),
    
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)

);



CREATE TABLE Order_Log (
    LOG_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID NUMBER,
    CUSTOMER_ID NUMBER,
    ORDER_DATE TIMESTAMP,
    TOTAL_PRICE NUMBER(10,2) NOT NULL,
    DELETED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE ORDERS (
    ORDER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ORDER_STATUS VARCHAR2(40) DEFAULT 'Processing',
    TOTAL_PRICE NUMBER(10,2) NOT NULL,
    
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
    CONSTRAINT chk_total_price CHECK (TOTAL_PRICE >= 0),
    CONSTRAINT chk_OrderStatus CHECK(ORDER_STATUS IN('Processing', 'Done', 'Cancelled'))
);



CREATE TABLE PAYMENTS (
    PAYMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID NUMBER,
    TOTAL_PRICE NUMBER(10,2) NOT NULL,
    PAYMENT_DATE DATE DEFAULT SYSDATE,
    PAYMENT_METHOD VARCHAR2(50) DEFAULT 'Cash on Delivery',
    STATUS VARCHAR2(50) DEFAULT 'Processing',
    
    CONSTRAINT fk_Payment_OrderId FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
    CONSTRAINT chk_PaymentStatus CHECK(STATUS IN('Processing', 'Done'))
);




CREATE TABLE DELIVERY(
    DELIVERY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID NUMBER,
    STATUS VARCHAR2(50),
    ESTIMATED_DATE TIMESTAMP,
    
    
    CONSTRAINT fk_Delivery_OrderID FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
    CONSTRAINT chk_constraint CHECK(STATUS IN('Processing', 'Shipped', 'Delivered','Cancelled'))
);



CREATE TABLE CUSTOMER_FEEDBACK(
    FEEDBACK_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PRODUCT_ID NUMBER,
    USER_ID NUMBER,
    MESSAGE VARCHAR2(1000),
    TYPE VARCHAR2(50),
    TIMESTAMP DATE DEFAULT SYSDATE,
    
    
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    CONSTRAINT fk_feedback_product FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);



